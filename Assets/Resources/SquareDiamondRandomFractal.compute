// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel Clear
#pragma kernel StartCorners
#pragma kernel Diamond
#pragma kernel SquareMiddle
#pragma kernel SquareLeftSide
#pragma kernel SquareUpSide
#pragma kernel SquareRightSide
#pragma kernel SquareDownSide

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
Texture2D<float> read;
RWTexture2D<float> write;

[numthreads(8, 8, 1)]
void Clear(uint3 id : SV_DispatchThreadID)
{
	// TODO: insert actual code here!

	write[id.xy] = 0.5;
}

[numthreads(2,2,1)]
void StartCorners (uint3 id : SV_DispatchThreadID)
{
    // TODO: insert actual code here!

	write[id.xy] = 1.0;
}

[numthreads(8, 8, 1)]
void Diamond(uint3 id : SV_DispatchThreadID)
{
	// TODO: insert actual code here!

	write[id.xy] = 1.0;
}


[numthreads(8, 8, 1)]
void SquareMiddle(uint3 id : SV_DispatchThreadID)
{
	// TODO: insert actual code here!

	write[id.xy] = 1.0;
}


[numthreads(1, 64, 1)]
void SquareLeftSide(uint3 id : SV_DispatchThreadID)
{
	// TODO: insert actual code here!

	write[id.xy] = 1.0;
}


[numthreads(64, 1, 1)]
void SquareUpSide(uint3 id : SV_DispatchThreadID)
{
	// TODO: insert actual code here!

	write[id.xy] = 1.0;
}


[numthreads(1, 64, 1)]
void SquareRightSide(uint3 id : SV_DispatchThreadID)
{
	// TODO: insert actual code here!

	write[id.xy] = 1.0;
}

[numthreads(64, 1, 1)]
void SquareDownSide(uint3 id : SV_DispatchThreadID)
{
	// TODO: insert actual code here!

	write[id.xy] = 1.0;
}